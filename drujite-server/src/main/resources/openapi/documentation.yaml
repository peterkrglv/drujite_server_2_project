#       required: true
#     responses:
#       '201':
#         description: New question created
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/Question'
#           application/xml:
#             schema:
#               $ref: '#/components/schemas/Question'
#       '401':
#         description: Wrong credentials
#       '405':
#         description: Method not allowed

components:
  schemas:
    UserLogin:
      type: object
      properties:
        username:
          type: string
          example: theUser
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        telegramId:
          type: integer
          format: int64
          example: '12345'
      xml:
        name: user_login
    UserSignup:
      type: object
      properties:
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
      xml:
        name: user_signup

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        telegramId:
          type: integer
          format: int64
          example: '12345'
      xml:
        name: user

    Question:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        header:
          type: string
          example: Question
        content:
          type: string
          example: Why?
        answer:
          type: string
          example: Because
        score:
          type: integer
          format: int8
          example: 10
        hasImage:
          type: boolean
          example: true
        imageUrl:
          type: string
          example: "https://mysite.org/images/myimage.jpg"
      xml:
        name: question


  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header